# .github/workflows/terraform-destroy.yml

name: 'Terraform Destroy F5 Site'

# Controls when the workflow will run
on:
  # This workflow can ONLY be run manually from the Actions tab
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "destroy" to confirm you want to permanently delete the infrastructure.'
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: ubuntu-latest
    
    # Add a check to ensure the confirmation phrase was typed correctly
    if: github.event.inputs.confirmation == 'destroy'

    # These permissions are needed for the OIDC connection to AWS
    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials using OIDC
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ secrets.AWS_REGION }} 
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      # Step 3: Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.0

      # Step 4: Decode the .p12 file from a GitHub Secret
      - name: Decode .p12 Certificate
        run: |
          echo "Decoding F5 API certificate..."
          echo "${{ secrets.P12_FILE_BASE64 }}" | base64 --decode > creds.p12
          echo "Certificate file created."
        env:
          P12_FILE_BASE64: ${{ secrets.P12_FILE_BASE64 }}

      # Step 5: Terraform Init
      - name: Terraform Init
        id: init
        run: terraform init

      # Step 6: Terraform Destroy
      - name: Terraform Destroy
        id: destroy
        env:
          # Use the password secret for authentication
          VES_P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: terraform destroy -auto-approve -var-file="sites.tfvars"
